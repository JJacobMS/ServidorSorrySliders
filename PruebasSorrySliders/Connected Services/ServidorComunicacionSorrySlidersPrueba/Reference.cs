//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IInicioSesion")]
    public interface IInicioSesion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInicioSesion/VerificarExistenciaCorreoCuenta", ReplyAction="http://tempuri.org/IInicioSesion/VerificarExistenciaCorreoCuentaResponse")]
        DatosSorrySliders.Constantes VerificarExistenciaCorreoCuenta(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInicioSesion/VerificarExistenciaCorreoCuenta", ReplyAction="http://tempuri.org/IInicioSesion/VerificarExistenciaCorreoCuentaResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> VerificarExistenciaCorreoCuentaAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInicioSesion/VerificarContrasenaDeCuenta", ReplyAction="http://tempuri.org/IInicioSesion/VerificarContrasenaDeCuentaResponse")]
        DatosSorrySliders.Constantes VerificarContrasenaDeCuenta(DatosSorrySliders.CuentaSet cuentaPorVerificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInicioSesion/VerificarContrasenaDeCuenta", ReplyAction="http://tempuri.org/IInicioSesion/VerificarContrasenaDeCuentaResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> VerificarContrasenaDeCuentaAsync(DatosSorrySliders.CuentaSet cuentaPorVerificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInicioSesion/JugadorEstaEnLinea", ReplyAction="http://tempuri.org/IInicioSesion/JugadorEstaEnLineaResponse")]
        bool JugadorEstaEnLinea(string jugadorCorreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInicioSesion/JugadorEstaEnLinea", ReplyAction="http://tempuri.org/IInicioSesion/JugadorEstaEnLineaResponse")]
        System.Threading.Tasks.Task<bool> JugadorEstaEnLineaAsync(string jugadorCorreo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInicioSesionChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IInicioSesion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InicioSesionClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IInicioSesion>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IInicioSesion {
        
        public InicioSesionClient() {
        }
        
        public InicioSesionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InicioSesionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InicioSesionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InicioSesionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DatosSorrySliders.Constantes VerificarExistenciaCorreoCuenta(string correoElectronico) {
            return base.Channel.VerificarExistenciaCorreoCuenta(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> VerificarExistenciaCorreoCuentaAsync(string correoElectronico) {
            return base.Channel.VerificarExistenciaCorreoCuentaAsync(correoElectronico);
        }
        
        public DatosSorrySliders.Constantes VerificarContrasenaDeCuenta(DatosSorrySliders.CuentaSet cuentaPorVerificar) {
            return base.Channel.VerificarContrasenaDeCuenta(cuentaPorVerificar);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> VerificarContrasenaDeCuentaAsync(DatosSorrySliders.CuentaSet cuentaPorVerificar) {
            return base.Channel.VerificarContrasenaDeCuentaAsync(cuentaPorVerificar);
        }
        
        public bool JugadorEstaEnLinea(string jugadorCorreo) {
            return base.Channel.JugadorEstaEnLinea(jugadorCorreo);
        }
        
        public System.Threading.Tasks.Task<bool> JugadorEstaEnLineaAsync(string jugadorCorreo) {
            return base.Channel.JugadorEstaEnLineaAsync(jugadorCorreo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IMenuPrincipal")]
    public interface IMenuPrincipal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuPrincipal/RecuperarDatosUsuario", ReplyAction="http://tempuri.org/IMenuPrincipal/RecuperarDatosUsuarioResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, string, byte[]> RecuperarDatosUsuario(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuPrincipal/RecuperarDatosUsuario", ReplyAction="http://tempuri.org/IMenuPrincipal/RecuperarDatosUsuarioResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, string, byte[]>> RecuperarDatosUsuarioAsync(string correoElectronico);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMenuPrincipalChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IMenuPrincipal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MenuPrincipalClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IMenuPrincipal>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IMenuPrincipal {
        
        public MenuPrincipalClient() {
        }
        
        public MenuPrincipalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MenuPrincipalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuPrincipalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuPrincipalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, string, byte[]> RecuperarDatosUsuario(string correoElectronico) {
            return base.Channel.RecuperarDatosUsuario(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, string, byte[]>> RecuperarDatosUsuarioAsync(string correoElectronico) {
            return base.Channel.RecuperarDatosUsuarioAsync(correoElectronico);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IRegistroUsuario")]
    public interface IRegistroUsuario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistroUsuario/AgregarUsuario", ReplyAction="http://tempuri.org/IRegistroUsuario/AgregarUsuarioResponse")]
        DatosSorrySliders.Constantes AgregarUsuario(DatosSorrySliders.UsuarioSet usuarioPorGuardar, DatosSorrySliders.CuentaSet cuentaPorGuardar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistroUsuario/AgregarUsuario", ReplyAction="http://tempuri.org/IRegistroUsuario/AgregarUsuarioResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> AgregarUsuarioAsync(DatosSorrySliders.UsuarioSet usuarioPorGuardar, DatosSorrySliders.CuentaSet cuentaPorGuardar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistroUsuario/ActualizarUsuario", ReplyAction="http://tempuri.org/IRegistroUsuario/ActualizarUsuarioResponse")]
        DatosSorrySliders.Constantes ActualizarUsuario(DatosSorrySliders.UsuarioSet usuarioPorActualizar, DatosSorrySliders.CuentaSet cuentaPorActualizar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistroUsuario/ActualizarUsuario", ReplyAction="http://tempuri.org/IRegistroUsuario/ActualizarUsuarioResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> ActualizarUsuarioAsync(DatosSorrySliders.UsuarioSet usuarioPorActualizar, DatosSorrySliders.CuentaSet cuentaPorActualizar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistroUsuarioChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IRegistroUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistroUsuarioClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IRegistroUsuario>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IRegistroUsuario {
        
        public RegistroUsuarioClient() {
        }
        
        public RegistroUsuarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistroUsuarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistroUsuarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistroUsuarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DatosSorrySliders.Constantes AgregarUsuario(DatosSorrySliders.UsuarioSet usuarioPorGuardar, DatosSorrySliders.CuentaSet cuentaPorGuardar) {
            return base.Channel.AgregarUsuario(usuarioPorGuardar, cuentaPorGuardar);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> AgregarUsuarioAsync(DatosSorrySliders.UsuarioSet usuarioPorGuardar, DatosSorrySliders.CuentaSet cuentaPorGuardar) {
            return base.Channel.AgregarUsuarioAsync(usuarioPorGuardar, cuentaPorGuardar);
        }
        
        public DatosSorrySliders.Constantes ActualizarUsuario(DatosSorrySliders.UsuarioSet usuarioPorActualizar, DatosSorrySliders.CuentaSet cuentaPorActualizar) {
            return base.Channel.ActualizarUsuario(usuarioPorActualizar, cuentaPorActualizar);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> ActualizarUsuarioAsync(DatosSorrySliders.UsuarioSet usuarioPorActualizar, DatosSorrySliders.CuentaSet cuentaPorActualizar) {
            return base.Channel.ActualizarUsuarioAsync(usuarioPorActualizar, cuentaPorActualizar);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.ILobby", CallbackContract=typeof(PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ILobbyCallback))]
    public interface ILobby {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/EntrarPartida")]
        void EntrarPartida(string uid, string jugadorCorreo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/EntrarPartida")]
        System.Threading.Tasks.Task EntrarPartidaAsync(string uid, string jugadorCorreo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/SalirPartida")]
        void SalirPartida(string uid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/SalirPartida")]
        System.Threading.Tasks.Task SalirPartidaAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/IniciarPartida")]
        void IniciarPartida(string uid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/IniciarPartida")]
        System.Threading.Tasks.Task IniciarPartidaAsync(string uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/JugadorEntroPartida")]
        void JugadorEntroPartida();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/JugadorSalioPartida")]
        void JugadorSalioPartida();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobby/HostInicioPartida")]
        void HostInicioPartida();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ILobby, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyClient : System.ServiceModel.DuplexClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ILobby>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ILobby {
        
        public LobbyClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void EntrarPartida(string uid, string jugadorCorreo) {
            base.Channel.EntrarPartida(uid, jugadorCorreo);
        }
        
        public System.Threading.Tasks.Task EntrarPartidaAsync(string uid, string jugadorCorreo) {
            return base.Channel.EntrarPartidaAsync(uid, jugadorCorreo);
        }
        
        public void SalirPartida(string uid) {
            base.Channel.SalirPartida(uid);
        }
        
        public System.Threading.Tasks.Task SalirPartidaAsync(string uid) {
            return base.Channel.SalirPartidaAsync(uid);
        }
        
        public void IniciarPartida(string uid) {
            base.Channel.IniciarPartida(uid);
        }
        
        public System.Threading.Tasks.Task IniciarPartidaAsync(string uid) {
            return base.Channel.IniciarPartidaAsync(uid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IUnirsePartida")]
    public interface IUnirsePartida {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/UnirseAlLobby", ReplyAction="http://tempuri.org/IUnirsePartida/UnirseAlLobbyResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, int> UnirseAlLobby(string uid, string correoJugadorNuevo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/UnirseAlLobby", ReplyAction="http://tempuri.org/IUnirsePartida/UnirseAlLobbyResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, int>> UnirseAlLobbyAsync(string uid, string correoJugadorNuevo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/RecuperarJugadoresLobby", ReplyAction="http://tempuri.org/IUnirsePartida/RecuperarJugadoresLobbyResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarJugadoresLobby(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/RecuperarJugadoresLobby", ReplyAction="http://tempuri.org/IUnirsePartida/RecuperarJugadoresLobbyResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarJugadoresLobbyAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/RecuperarPartida", ReplyAction="http://tempuri.org/IUnirsePartida/RecuperarPartidaResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.PartidaSet> RecuperarPartida(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/RecuperarPartida", ReplyAction="http://tempuri.org/IUnirsePartida/RecuperarPartidaResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.PartidaSet>> RecuperarPartidaAsync(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUnirsePartida/SalirDelLobby")]
        void SalirDelLobby(string correoJugador, string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUnirsePartida/SalirDelLobby")]
        System.Threading.Tasks.Task SalirDelLobbyAsync(string correoJugador, string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/CrearCuentaProvisionalInvitado", ReplyAction="http://tempuri.org/IUnirsePartida/CrearCuentaProvisionalInvitadoResponse")]
        DatosSorrySliders.Constantes CrearCuentaProvisionalInvitado(DatosSorrySliders.CuentaSet cuentaProvisionalInvitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnirsePartida/CrearCuentaProvisionalInvitado", ReplyAction="http://tempuri.org/IUnirsePartida/CrearCuentaProvisionalInvitadoResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> CrearCuentaProvisionalInvitadoAsync(DatosSorrySliders.CuentaSet cuentaProvisionalInvitado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUnirsePartida/EliminarCuentaProvisional")]
        void EliminarCuentaProvisional(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUnirsePartida/EliminarCuentaProvisional")]
        System.Threading.Tasks.Task EliminarCuentaProvisionalAsync(string correoElectronico);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnirsePartidaChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUnirsePartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnirsePartidaClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUnirsePartida>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUnirsePartida {
        
        public UnirsePartidaClient() {
        }
        
        public UnirsePartidaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnirsePartidaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnirsePartidaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnirsePartidaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, int> UnirseAlLobby(string uid, string correoJugadorNuevo) {
            return base.Channel.UnirseAlLobby(uid, correoJugadorNuevo);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, int>> UnirseAlLobbyAsync(string uid, string correoJugadorNuevo) {
            return base.Channel.UnirseAlLobbyAsync(uid, correoJugadorNuevo);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarJugadoresLobby(string uid) {
            return base.Channel.RecuperarJugadoresLobby(uid);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarJugadoresLobbyAsync(string uid) {
            return base.Channel.RecuperarJugadoresLobbyAsync(uid);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.PartidaSet> RecuperarPartida(string codigoPartida) {
            return base.Channel.RecuperarPartida(codigoPartida);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.PartidaSet>> RecuperarPartidaAsync(string codigoPartida) {
            return base.Channel.RecuperarPartidaAsync(codigoPartida);
        }
        
        public void SalirDelLobby(string correoJugador, string codigoPartida) {
            base.Channel.SalirDelLobby(correoJugador, codigoPartida);
        }
        
        public System.Threading.Tasks.Task SalirDelLobbyAsync(string correoJugador, string codigoPartida) {
            return base.Channel.SalirDelLobbyAsync(correoJugador, codigoPartida);
        }
        
        public DatosSorrySliders.Constantes CrearCuentaProvisionalInvitado(DatosSorrySliders.CuentaSet cuentaProvisionalInvitado) {
            return base.Channel.CrearCuentaProvisionalInvitado(cuentaProvisionalInvitado);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> CrearCuentaProvisionalInvitadoAsync(DatosSorrySliders.CuentaSet cuentaProvisionalInvitado) {
            return base.Channel.CrearCuentaProvisionalInvitadoAsync(cuentaProvisionalInvitado);
        }
        
        public void EliminarCuentaProvisional(string correoElectronico) {
            base.Channel.EliminarCuentaProvisional(correoElectronico);
        }
        
        public System.Threading.Tasks.Task EliminarCuentaProvisionalAsync(string correoElectronico) {
            return base.Channel.EliminarCuentaProvisionalAsync(correoElectronico);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.ICrearLobby")]
    public interface ICrearLobby {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrearLobby/CrearPartida", ReplyAction="http://tempuri.org/ICrearLobby/CrearPartidaResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, string> CrearPartida(string correoHost, int NumeroJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrearLobby/CrearPartida", ReplyAction="http://tempuri.org/ICrearLobby/CrearPartidaResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, string>> CrearPartidaAsync(string correoHost, int NumeroJugadores);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICrearLobbyChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ICrearLobby, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CrearLobbyClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ICrearLobby>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.ICrearLobby {
        
        public CrearLobbyClient() {
        }
        
        public CrearLobbyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CrearLobbyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrearLobbyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrearLobbyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, string> CrearPartida(string correoHost, int NumeroJugadores) {
            return base.Channel.CrearPartida(correoHost, NumeroJugadores);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, string>> CrearPartidaAsync(string correoHost, int NumeroJugadores) {
            return base.Channel.CrearPartidaAsync(correoHost, NumeroJugadores);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IListaAmigos")]
    public interface IListaAmigos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarAmigosCuenta", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarAmigosCuentaResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarAmigosCuenta(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarAmigosCuenta", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarAmigosCuentaResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarAmigosCuentaAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarJugadoresCuenta", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarJugadoresCuentaResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarJugadoresCuenta(string informacionJugador, string correoJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarJugadoresCuenta", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarJugadoresCuentaResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarJugadoresCuentaAsync(string informacionJugador, string correoJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarTipoNotificacion", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarTipoNotificacionResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.TipoNotificacion[]> RecuperarTipoNotificacion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarTipoNotificacion", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarTipoNotificacionResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.TipoNotificacion[]>> RecuperarTipoNotificacionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/GuardarNotificacion", ReplyAction="http://tempuri.org/IListaAmigos/GuardarNotificacionResponse")]
        DatosSorrySliders.Constantes GuardarNotificacion(DatosSorrySliders.NotificacionSet notificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/GuardarNotificacion", ReplyAction="http://tempuri.org/IListaAmigos/GuardarNotificacionResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> GuardarNotificacionAsync(DatosSorrySliders.NotificacionSet notificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarNotificaciones", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarNotificacionesResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.NotificacionSet[]> RecuperarNotificaciones(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarNotificaciones", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarNotificacionesResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.NotificacionSet[]>> RecuperarNotificacionesAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarAmigos", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarAmigosResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarAmigos(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarAmigos", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarAmigosResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarAmigosAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/EliminarNotificacionJugador", ReplyAction="http://tempuri.org/IListaAmigos/EliminarNotificacionJugadorResponse")]
        DatosSorrySliders.Constantes EliminarNotificacionJugador(string correoElectronico, int idNotificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/EliminarNotificacionJugador", ReplyAction="http://tempuri.org/IListaAmigos/EliminarNotificacionJugadorResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> EliminarNotificacionJugadorAsync(string correoElectronico, int idNotificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/NotificarUsuario", ReplyAction="http://tempuri.org/IListaAmigos/NotificarUsuarioResponse")]
        void NotificarUsuario(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/NotificarUsuario", ReplyAction="http://tempuri.org/IListaAmigos/NotificarUsuarioResponse")]
        System.Threading.Tasks.Task NotificarUsuarioAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/GuardarAmistad", ReplyAction="http://tempuri.org/IListaAmigos/GuardarAmistadResponse")]
        DatosSorrySliders.Constantes GuardarAmistad(string correoElectronicoDestinatario, string correoElectronicoRemitente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/GuardarAmistad", ReplyAction="http://tempuri.org/IListaAmigos/GuardarAmistadResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> GuardarAmistadAsync(string correoElectronicoDestinatario, string correoElectronicoRemitente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/EliminarAmistad", ReplyAction="http://tempuri.org/IListaAmigos/EliminarAmistadResponse")]
        DatosSorrySliders.Constantes EliminarAmistad(string correoElectronicoPrincipal, string correoElectronicoAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/EliminarAmistad", ReplyAction="http://tempuri.org/IListaAmigos/EliminarAmistadResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> EliminarAmistadAsync(string correoElectronicoPrincipal, string correoElectronicoAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarBaneados", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarBaneadosResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarBaneados(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarBaneados", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarBaneadosResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarBaneadosAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarSolicitudesAmistad", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarSolicitudesAmistadResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarSolicitudesAmistad(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/RecuperarSolicitudesAmistad", ReplyAction="http://tempuri.org/IListaAmigos/RecuperarSolicitudesAmistadResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarSolicitudesAmistadAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/BanearJugador", ReplyAction="http://tempuri.org/IListaAmigos/BanearJugadorResponse")]
        DatosSorrySliders.Constantes BanearJugador(string correoElectronicoPrincipal, string correoElectronicoBaneado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/BanearJugador", ReplyAction="http://tempuri.org/IListaAmigos/BanearJugadorResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> BanearJugadorAsync(string correoElectronicoPrincipal, string correoElectronicoBaneado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/EliminarBaneo", ReplyAction="http://tempuri.org/IListaAmigos/EliminarBaneoResponse")]
        DatosSorrySliders.Constantes EliminarBaneo(string correoElectronicoPrincipal, string correoElectronicoBaneado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListaAmigos/EliminarBaneo", ReplyAction="http://tempuri.org/IListaAmigos/EliminarBaneoResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> EliminarBaneoAsync(string correoElectronicoPrincipal, string correoElectronicoBaneado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IListaAmigosChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IListaAmigos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListaAmigosClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IListaAmigos>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IListaAmigos {
        
        public ListaAmigosClient() {
        }
        
        public ListaAmigosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ListaAmigosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListaAmigosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListaAmigosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarAmigosCuenta(string correoElectronico) {
            return base.Channel.RecuperarAmigosCuenta(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarAmigosCuentaAsync(string correoElectronico) {
            return base.Channel.RecuperarAmigosCuentaAsync(correoElectronico);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarJugadoresCuenta(string informacionJugador, string correoJugador) {
            return base.Channel.RecuperarJugadoresCuenta(informacionJugador, correoJugador);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarJugadoresCuentaAsync(string informacionJugador, string correoJugador) {
            return base.Channel.RecuperarJugadoresCuentaAsync(informacionJugador, correoJugador);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.TipoNotificacion[]> RecuperarTipoNotificacion() {
            return base.Channel.RecuperarTipoNotificacion();
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.TipoNotificacion[]>> RecuperarTipoNotificacionAsync() {
            return base.Channel.RecuperarTipoNotificacionAsync();
        }
        
        public DatosSorrySliders.Constantes GuardarNotificacion(DatosSorrySliders.NotificacionSet notificacion) {
            return base.Channel.GuardarNotificacion(notificacion);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> GuardarNotificacionAsync(DatosSorrySliders.NotificacionSet notificacion) {
            return base.Channel.GuardarNotificacionAsync(notificacion);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.NotificacionSet[]> RecuperarNotificaciones(string correoElectronico) {
            return base.Channel.RecuperarNotificaciones(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.NotificacionSet[]>> RecuperarNotificacionesAsync(string correoElectronico) {
            return base.Channel.RecuperarNotificacionesAsync(correoElectronico);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarAmigos(string correoElectronico) {
            return base.Channel.RecuperarAmigos(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarAmigosAsync(string correoElectronico) {
            return base.Channel.RecuperarAmigosAsync(correoElectronico);
        }
        
        public DatosSorrySliders.Constantes EliminarNotificacionJugador(string correoElectronico, int idNotificacion) {
            return base.Channel.EliminarNotificacionJugador(correoElectronico, idNotificacion);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> EliminarNotificacionJugadorAsync(string correoElectronico, int idNotificacion) {
            return base.Channel.EliminarNotificacionJugadorAsync(correoElectronico, idNotificacion);
        }
        
        public void NotificarUsuario(string correoElectronico) {
            base.Channel.NotificarUsuario(correoElectronico);
        }
        
        public System.Threading.Tasks.Task NotificarUsuarioAsync(string correoElectronico) {
            return base.Channel.NotificarUsuarioAsync(correoElectronico);
        }
        
        public DatosSorrySliders.Constantes GuardarAmistad(string correoElectronicoDestinatario, string correoElectronicoRemitente) {
            return base.Channel.GuardarAmistad(correoElectronicoDestinatario, correoElectronicoRemitente);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> GuardarAmistadAsync(string correoElectronicoDestinatario, string correoElectronicoRemitente) {
            return base.Channel.GuardarAmistadAsync(correoElectronicoDestinatario, correoElectronicoRemitente);
        }
        
        public DatosSorrySliders.Constantes EliminarAmistad(string correoElectronicoPrincipal, string correoElectronicoAmigo) {
            return base.Channel.EliminarAmistad(correoElectronicoPrincipal, correoElectronicoAmigo);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> EliminarAmistadAsync(string correoElectronicoPrincipal, string correoElectronicoAmigo) {
            return base.Channel.EliminarAmistadAsync(correoElectronicoPrincipal, correoElectronicoAmigo);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarBaneados(string correoElectronico) {
            return base.Channel.RecuperarBaneados(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarBaneadosAsync(string correoElectronico) {
            return base.Channel.RecuperarBaneadosAsync(correoElectronico);
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]> RecuperarSolicitudesAmistad(string correoElectronico) {
            return base.Channel.RecuperarSolicitudesAmistad(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.CuentaSet[]>> RecuperarSolicitudesAmistadAsync(string correoElectronico) {
            return base.Channel.RecuperarSolicitudesAmistadAsync(correoElectronico);
        }
        
        public DatosSorrySliders.Constantes BanearJugador(string correoElectronicoPrincipal, string correoElectronicoBaneado) {
            return base.Channel.BanearJugador(correoElectronicoPrincipal, correoElectronicoBaneado);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> BanearJugadorAsync(string correoElectronicoPrincipal, string correoElectronicoBaneado) {
            return base.Channel.BanearJugadorAsync(correoElectronicoPrincipal, correoElectronicoBaneado);
        }
        
        public DatosSorrySliders.Constantes EliminarBaneo(string correoElectronicoPrincipal, string correoElectronicoBaneado) {
            return base.Channel.EliminarBaneo(correoElectronicoPrincipal, correoElectronicoBaneado);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> EliminarBaneoAsync(string correoElectronicoPrincipal, string correoElectronicoBaneado) {
            return base.Channel.EliminarBaneoAsync(correoElectronicoPrincipal, correoElectronicoBaneado);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.INotificarJugadores", CallbackContract=typeof(PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.INotificarJugadoresCallback))]
    public interface INotificarJugadores {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificarJugadores/AgregarProxy", ReplyAction="http://tempuri.org/INotificarJugadores/AgregarProxyResponse")]
        DatosSorrySliders.Constantes AgregarProxy(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificarJugadores/AgregarProxy", ReplyAction="http://tempuri.org/INotificarJugadores/AgregarProxyResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> AgregarProxyAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificarJugadores/EliminarProxy", ReplyAction="http://tempuri.org/INotificarJugadores/EliminarProxyResponse")]
        void EliminarProxy(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificarJugadores/EliminarProxy", ReplyAction="http://tempuri.org/INotificarJugadores/EliminarProxyResponse")]
        System.Threading.Tasks.Task EliminarProxyAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotificarJugadores/LlamarCallback")]
        void LlamarCallback(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotificarJugadores/LlamarCallback")]
        System.Threading.Tasks.Task LlamarCallbackAsync(string correoElectronico);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificarJugadoresCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotificarJugadores/RecuperarNotificacion")]
        void RecuperarNotificacion();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificarJugadoresChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.INotificarJugadores, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificarJugadoresClient : System.ServiceModel.DuplexClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.INotificarJugadores>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.INotificarJugadores {
        
        public NotificarJugadoresClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NotificarJugadoresClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NotificarJugadoresClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotificarJugadoresClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotificarJugadoresClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public DatosSorrySliders.Constantes AgregarProxy(string correoElectronico) {
            return base.Channel.AgregarProxy(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> AgregarProxyAsync(string correoElectronico) {
            return base.Channel.AgregarProxyAsync(correoElectronico);
        }
        
        public void EliminarProxy(string correoElectronico) {
            base.Channel.EliminarProxy(correoElectronico);
        }
        
        public System.Threading.Tasks.Task EliminarProxyAsync(string correoElectronico) {
            return base.Channel.EliminarProxyAsync(correoElectronico);
        }
        
        public void LlamarCallback(string correoElectronico) {
            base.Channel.LlamarCallback(correoElectronico);
        }
        
        public System.Threading.Tasks.Task LlamarCallbackAsync(string correoElectronico) {
            return base.Channel.LlamarCallbackAsync(correoElectronico);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IDetallesCuentaUsuario")]
    public interface IDetallesCuentaUsuario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetallesCuentaUsuario/RecuperarDatosUsuarioDeCuenta", ReplyAction="http://tempuri.org/IDetallesCuentaUsuario/RecuperarDatosUsuarioDeCuentaResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.UsuarioSet> RecuperarDatosUsuarioDeCuenta(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetallesCuentaUsuario/RecuperarDatosUsuarioDeCuenta", ReplyAction="http://tempuri.org/IDetallesCuentaUsuario/RecuperarDatosUsuarioDeCuentaResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.UsuarioSet>> RecuperarDatosUsuarioDeCuentaAsync(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetallesCuentaUsuario/VerificarContrasenaActual", ReplyAction="http://tempuri.org/IDetallesCuentaUsuario/VerificarContrasenaActualResponse")]
        DatosSorrySliders.Constantes VerificarContrasenaActual(DatosSorrySliders.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetallesCuentaUsuario/VerificarContrasenaActual", ReplyAction="http://tempuri.org/IDetallesCuentaUsuario/VerificarContrasenaActualResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> VerificarContrasenaActualAsync(DatosSorrySliders.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetallesCuentaUsuario/CambiarContrasena", ReplyAction="http://tempuri.org/IDetallesCuentaUsuario/CambiarContrasenaResponse")]
        DatosSorrySliders.Constantes CambiarContrasena(DatosSorrySliders.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetallesCuentaUsuario/CambiarContrasena", ReplyAction="http://tempuri.org/IDetallesCuentaUsuario/CambiarContrasenaResponse")]
        System.Threading.Tasks.Task<DatosSorrySliders.Constantes> CambiarContrasenaAsync(DatosSorrySliders.CuentaSet cuenta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDetallesCuentaUsuarioChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IDetallesCuentaUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DetallesCuentaUsuarioClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IDetallesCuentaUsuario>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IDetallesCuentaUsuario {
        
        public DetallesCuentaUsuarioClient() {
        }
        
        public DetallesCuentaUsuarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DetallesCuentaUsuarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DetallesCuentaUsuarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DetallesCuentaUsuarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.UsuarioSet> RecuperarDatosUsuarioDeCuenta(string correoElectronico) {
            return base.Channel.RecuperarDatosUsuarioDeCuenta(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, DatosSorrySliders.UsuarioSet>> RecuperarDatosUsuarioDeCuentaAsync(string correoElectronico) {
            return base.Channel.RecuperarDatosUsuarioDeCuentaAsync(correoElectronico);
        }
        
        public DatosSorrySliders.Constantes VerificarContrasenaActual(DatosSorrySliders.CuentaSet cuenta) {
            return base.Channel.VerificarContrasenaActual(cuenta);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> VerificarContrasenaActualAsync(DatosSorrySliders.CuentaSet cuenta) {
            return base.Channel.VerificarContrasenaActualAsync(cuenta);
        }
        
        public DatosSorrySliders.Constantes CambiarContrasena(DatosSorrySliders.CuentaSet cuenta) {
            return base.Channel.CambiarContrasena(cuenta);
        }
        
        public System.Threading.Tasks.Task<DatosSorrySliders.Constantes> CambiarContrasenaAsync(DatosSorrySliders.CuentaSet cuenta) {
            return base.Channel.CambiarContrasenaAsync(cuenta);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IPuntuacion")]
    public interface IPuntuacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuntuacion/RecuperarPuntuaciones", ReplyAction="http://tempuri.org/IPuntuacion/RecuperarPuntuacionesResponse")]
        System.ValueTuple<DatosSorrySliders.Constantes, ServidorSorrySliders.Puntuacion[]> RecuperarPuntuaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuntuacion/RecuperarPuntuaciones", ReplyAction="http://tempuri.org/IPuntuacion/RecuperarPuntuacionesResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, ServidorSorrySliders.Puntuacion[]>> RecuperarPuntuacionesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPuntuacionChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IPuntuacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PuntuacionClient : System.ServiceModel.ClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IPuntuacion>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IPuntuacion {
        
        public PuntuacionClient() {
        }
        
        public PuntuacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PuntuacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PuntuacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PuntuacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ValueTuple<DatosSorrySliders.Constantes, ServidorSorrySliders.Puntuacion[]> RecuperarPuntuaciones() {
            return base.Channel.RecuperarPuntuaciones();
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<DatosSorrySliders.Constantes, ServidorSorrySliders.Puntuacion[]>> RecuperarPuntuacionesAsync() {
            return base.Channel.RecuperarPuntuacionesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IChat", CallbackContract=typeof(PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IChatCallback))]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/ChatJuego")]
        void ChatJuego(string uid, string nickname, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/ChatJuego")]
        System.Threading.Tasks.Task ChatJuegoAsync(string uid, string nickname, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/IngresarAlChat")]
        void IngresarAlChat(string uid, string correo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/IngresarAlChat")]
        System.Threading.Tasks.Task IngresarAlChatAsync(string uid, string correo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/ExpulsarJugadorPartida")]
        void ExpulsarJugadorPartida(string uid, string correo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/ExpulsarJugadorPartida")]
        System.Threading.Tasks.Task ExpulsarJugadorPartidaAsync(string uid, string correo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/SalirChatListaJugadores")]
        void SalirChatListaJugadores(string uid, string correo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/SalirChatListaJugadores")]
        System.Threading.Tasks.Task SalirChatListaJugadoresAsync(string uid, string correo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/DevolverMensaje", ReplyAction="http://tempuri.org/IChat/DevolverMensajeResponse")]
        void DevolverMensaje(string nickname, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/ExpulsadoDeJugador", ReplyAction="http://tempuri.org/IChat/ExpulsadoDeJugadorResponse")]
        void ExpulsadoDeJugador(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/JugadorSalioListaJugadores", ReplyAction="http://tempuri.org/IChat/JugadorSalioListaJugadoresResponse")]
        void JugadorSalioListaJugadores(string correoElectronico);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IChat>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IChat {
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ChatJuego(string uid, string nickname, string mensaje) {
            base.Channel.ChatJuego(uid, nickname, mensaje);
        }
        
        public System.Threading.Tasks.Task ChatJuegoAsync(string uid, string nickname, string mensaje) {
            return base.Channel.ChatJuegoAsync(uid, nickname, mensaje);
        }
        
        public void IngresarAlChat(string uid, string correo) {
            base.Channel.IngresarAlChat(uid, correo);
        }
        
        public System.Threading.Tasks.Task IngresarAlChatAsync(string uid, string correo) {
            return base.Channel.IngresarAlChatAsync(uid, correo);
        }
        
        public void ExpulsarJugadorPartida(string uid, string correo) {
            base.Channel.ExpulsarJugadorPartida(uid, correo);
        }
        
        public System.Threading.Tasks.Task ExpulsarJugadorPartidaAsync(string uid, string correo) {
            return base.Channel.ExpulsarJugadorPartidaAsync(uid, correo);
        }
        
        public void SalirChatListaJugadores(string uid, string correo) {
            base.Channel.SalirChatListaJugadores(uid, correo);
        }
        
        public System.Threading.Tasks.Task SalirChatListaJugadoresAsync(string uid, string correo) {
            return base.Channel.SalirChatListaJugadoresAsync(uid, correo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IJuegoLanzamiento", CallbackContract=typeof(PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IJuegoLanzamientoCallback))]
    public interface IJuegoLanzamiento {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/AgregarJugadorJuegoLanzamiento")]
        void AgregarJugadorJuegoLanzamiento(string codigoPartida, string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/AgregarJugadorJuegoLanzamiento")]
        System.Threading.Tasks.Task AgregarJugadorJuegoLanzamientoAsync(string codigoPartida, string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/EliminarJugadorJuegoLanzamiento")]
        void EliminarJugadorJuegoLanzamiento(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/EliminarJugadorJuegoLanzamiento")]
        System.Threading.Tasks.Task EliminarJugadorJuegoLanzamientoAsync(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/NotificarLanzamientoDado")]
        void NotificarLanzamientoDado(string codigoPartida, string correo, int numeroDado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/NotificarLanzamientoDado")]
        System.Threading.Tasks.Task NotificarLanzamientoDadoAsync(string codigoPartida, string correo, int numeroDado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/NotificarLanzamientoLinea")]
        void NotificarLanzamientoLinea(string codigoPartida, string correo, double posicionX, double posicionY);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/NotificarLanzamientoLinea")]
        System.Threading.Tasks.Task NotificarLanzamientoLineaAsync(string codigoPartida, string correo, double posicionX, double posicionY);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/NotificarFinalizarLanzamiento")]
        void NotificarFinalizarLanzamiento(string codigoPartida, string correo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/NotificarFinalizarLanzamiento")]
        System.Threading.Tasks.Task NotificarFinalizarLanzamientoAsync(string codigoPartida, string correo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJuegoLanzamientoCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/JugadorTiroDado")]
        void JugadorTiroDado(int numeroDado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/JugadorDetuvoLinea")]
        void JugadorDetuvoLinea(double posicionX, double posicionY);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/JugadorSalioJuegoLanzamiento")]
        void JugadorSalioJuegoLanzamiento(string correoElectronicoSalido);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoLanzamiento/JugadoresListosParaSiguienteTurno")]
        void JugadoresListosParaSiguienteTurno();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJuegoLanzamientoChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IJuegoLanzamiento, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JuegoLanzamientoClient : System.ServiceModel.DuplexClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IJuegoLanzamiento>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IJuegoLanzamiento {
        
        public JuegoLanzamientoClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public JuegoLanzamientoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public JuegoLanzamientoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JuegoLanzamientoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JuegoLanzamientoClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AgregarJugadorJuegoLanzamiento(string codigoPartida, string correoElectronico) {
            base.Channel.AgregarJugadorJuegoLanzamiento(codigoPartida, correoElectronico);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorJuegoLanzamientoAsync(string codigoPartida, string correoElectronico) {
            return base.Channel.AgregarJugadorJuegoLanzamientoAsync(codigoPartida, correoElectronico);
        }
        
        public void EliminarJugadorJuegoLanzamiento(string codigoPartida) {
            base.Channel.EliminarJugadorJuegoLanzamiento(codigoPartida);
        }
        
        public System.Threading.Tasks.Task EliminarJugadorJuegoLanzamientoAsync(string codigoPartida) {
            return base.Channel.EliminarJugadorJuegoLanzamientoAsync(codigoPartida);
        }
        
        public void NotificarLanzamientoDado(string codigoPartida, string correo, int numeroDado) {
            base.Channel.NotificarLanzamientoDado(codigoPartida, correo, numeroDado);
        }
        
        public System.Threading.Tasks.Task NotificarLanzamientoDadoAsync(string codigoPartida, string correo, int numeroDado) {
            return base.Channel.NotificarLanzamientoDadoAsync(codigoPartida, correo, numeroDado);
        }
        
        public void NotificarLanzamientoLinea(string codigoPartida, string correo, double posicionX, double posicionY) {
            base.Channel.NotificarLanzamientoLinea(codigoPartida, correo, posicionX, posicionY);
        }
        
        public System.Threading.Tasks.Task NotificarLanzamientoLineaAsync(string codigoPartida, string correo, double posicionX, double posicionY) {
            return base.Channel.NotificarLanzamientoLineaAsync(codigoPartida, correo, posicionX, posicionY);
        }
        
        public void NotificarFinalizarLanzamiento(string codigoPartida, string correo) {
            base.Channel.NotificarFinalizarLanzamiento(codigoPartida, correo);
        }
        
        public System.Threading.Tasks.Task NotificarFinalizarLanzamientoAsync(string codigoPartida, string correo) {
            return base.Channel.NotificarFinalizarLanzamientoAsync(codigoPartida, correo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorComunicacionSorrySlidersPrueba.IUsuariosEnLinea", CallbackContract=typeof(PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUsuariosEnLineaCallback))]
    public interface IUsuariosEnLinea {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUsuariosEnLinea/EntrarConCuenta")]
        void EntrarConCuenta(string jugadorCorreo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUsuariosEnLinea/EntrarConCuenta")]
        System.Threading.Tasks.Task EntrarConCuentaAsync(string jugadorCorreo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUsuariosEnLinea/SalirDelSistema")]
        void SalirDelSistema(string jugadorCorreo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUsuariosEnLinea/SalirDelSistema")]
        System.Threading.Tasks.Task SalirDelSistemaAsync(string jugadorCorreo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsuariosEnLineaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUsuariosEnLinea/ComprobarJugador")]
        void ComprobarJugador();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsuariosEnLineaChannel : PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUsuariosEnLinea, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsuariosEnLineaClient : System.ServiceModel.DuplexClientBase<PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUsuariosEnLinea>, PruebasSorrySliders.ServidorComunicacionSorrySlidersPrueba.IUsuariosEnLinea {
        
        public UsuariosEnLineaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UsuariosEnLineaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UsuariosEnLineaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UsuariosEnLineaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UsuariosEnLineaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void EntrarConCuenta(string jugadorCorreo) {
            base.Channel.EntrarConCuenta(jugadorCorreo);
        }
        
        public System.Threading.Tasks.Task EntrarConCuentaAsync(string jugadorCorreo) {
            return base.Channel.EntrarConCuentaAsync(jugadorCorreo);
        }
        
        public void SalirDelSistema(string jugadorCorreo) {
            base.Channel.SalirDelSistema(jugadorCorreo);
        }
        
        public System.Threading.Tasks.Task SalirDelSistemaAsync(string jugadorCorreo) {
            return base.Channel.SalirDelSistemaAsync(jugadorCorreo);
        }
    }
}
